stages:
  - build
  - deploy

variables:
  DOTNET_VERSION: "6.0" # Update to your Blazor Server app's .NET version
  AZURE_APP_NAME: "hackmt-blazorwebapp" # Replace with your Azure Web App name
  AZURE_REGION: "centralus" # Replace with your Azure region

build:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:$DOTNET_VERSION
  before_script:
  - apt-get update -qq && apt-get install -y unzip zip
  - dotnet --version
  - dotnet restore
  script:
    # Restore dependencies and build the Blazor Server app
    - dotnet restore
    - dotnet publish -c Release -o publish
    - cd publish
    - zip -r ../publish.zip ./*

  artifacts:
    paths:
      - publish.zip

deploy:
  stage: deploy
  image: mcr.microsoft.com/azure-cli:latest
  script:
    # Authenticate with Azure using a Service Principal
    - az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
    # Deploy the Blazor Server app to Azure Web App
    - az webapp deploy --name $AZURE_APP_NAME --resource-group $AZURE_RESOURCE_GROUP --src-path publish.zip --type zip
  environment:
    name: production  # Tying this job to the production environment in GitLab
    url: https://hackmt-blazorwebapp-fqgcctfwb3chb5hq.centralus-01.azurewebsites.net/
  only:
    - master  # Trigger the deploy job only on the 'master' branch
    - release/*  # Trigger deploy on any branch starting with 'release/'
  when: manual  # Makes this job manual, it requires a user to trigger it from the GitLab UI